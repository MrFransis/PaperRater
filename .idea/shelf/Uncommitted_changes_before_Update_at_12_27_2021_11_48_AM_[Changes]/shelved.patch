Index: PaperRaterApp/src/main/java/it/unipi/dii/lsmd/paperraterapp/persistence/MongoDBManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.unipi.dii.lsmd.paperraterapp.persistence;\r\n\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.GsonBuilder;\r\nimport com.google.gson.JsonSyntaxException;\r\nimport com.google.gson.reflect.TypeToken;\r\nimport com.mongodb.client.MongoClient;\r\nimport com.mongodb.client.MongoCollection;\r\nimport com.mongodb.client.MongoCursor;\r\nimport com.mongodb.client.MongoDatabase;\r\nimport com.mongodb.client.model.Aggregates;\r\nimport com.mongodb.client.model.Filters;\r\nimport com.mongodb.client.model.Indexes;\r\nimport com.mongodb.client.model.Updates;\r\nimport com.mongodb.client.result.UpdateResult;\r\nimport it.unipi.dii.lsmd.paperraterapp.model.Comment;\r\nimport it.unipi.dii.lsmd.paperraterapp.model.Paper;\r\nimport it.unipi.dii.lsmd.paperraterapp.model.ReadingList;\r\nimport it.unipi.dii.lsmd.paperraterapp.model.User;\r\nimport javafx.util.Pair;\r\nimport org.bson.Document;\r\nimport org.bson.conversions.Bson;\r\n\r\nimport java.lang.reflect.Type;\r\nimport java.text.SimpleDateFormat;\r\nimport java.time.LocalDateTime;\r\nimport java.time.format.DateTimeFormatter;\r\nimport java.util.*;\r\nimport java.util.function.Consumer;\r\nimport java.util.regex.Pattern;\r\n\r\nimport static com.mongodb.client.model.Accumulators.sum;\r\nimport static com.mongodb.client.model.Aggregates.*;\r\nimport static com.mongodb.client.model.Filters.*;\r\nimport static com.mongodb.client.model.Indexes.ascending;\r\nimport static com.mongodb.client.model.Projections.*;\r\nimport static com.mongodb.client.model.Sorts.descending;\r\n\r\n\r\n\r\npublic class MongoDBManager {\r\n    public MongoDatabase db;\r\n    private MongoCollection usersCollection;\r\n    private MongoCollection papersCollection;\r\n\r\n\r\n    /**\r\n     *\r\n     * @param client MongoDBClient\r\n     */\r\n    public MongoDBManager(MongoClient client) {\r\n        this.db = client.getDatabase(\"PaperRater\");\r\n        usersCollection = db.getCollection(\"Users\");\r\n        papersCollection = db.getCollection(\"Papers\");\r\n    }\r\n\r\n    // da correggere\r\n    public int getNumUsers (String keyword) {\r\n        List<User> results = new ArrayList<>();\r\n        Gson gson = new GsonBuilder().serializeSpecialFloatingPointValues().create();\r\n        Consumer<Document> convertInUser = doc -> {\r\n            User user = gson.fromJson(gson.toJson(doc), User.class);\r\n            results.add(user);\r\n        };\r\n        Pattern pattern= Pattern.compile(\"^.*\" + keyword + \".*$\", Pattern.CASE_INSENSITIVE);\r\n        Bson filter = Aggregates.match(Filters.regex(\"username\", pattern));\r\n        usersCollection.aggregate(Arrays.asList(filter)).forEach(convertInUser);\r\n        return results.size();\r\n    }\r\n\r\n    /**\r\n     * Return users the contains the keyword, by\r\n     * @param keyword keyword to search users\r\n     * @return list of users\r\n     */\r\n    public List<User> getUsersByKeyword (String keyword, int next) {\r\n        List<User> results = new ArrayList<>();\r\n        Gson gson = new GsonBuilder().serializeSpecialFloatingPointValues().create();\r\n        Consumer<Document> convertInUser = doc -> {\r\n            User user = gson.fromJson(gson.toJson(doc), User.class);\r\n            results.add(user);\r\n        };\r\n        Pattern pattern= Pattern.compile(\"^.*\" + keyword + \".*$\", Pattern.CASE_INSENSITIVE);\r\n        Bson filter = Aggregates.match(Filters.regex(\"username\", pattern));\r\n        Bson limit = limit(8);\r\n        Bson skip = skip(next*8);\r\n        usersCollection.aggregate(Arrays.asList(filter, skip, limit)).forEach(convertInUser);\r\n        return results;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param username\r\n     * @param password\r\n     * @return\r\n     */\r\n    public User login (String username, String password) {\r\n        Document result = (Document) usersCollection.find(Filters.and(eq(\"username\", username),\r\n                                                                eq(\"password\", password))).\r\n                                                                first();\r\n\r\n        Gson gson = new Gson();\r\n        return gson.fromJson(gson.toJson(result), User.class);\r\n    }\r\n\r\n    /**\r\n     * Add a new User to MongoDB\r\n     * @param u The object User which contains all the necessary information\r\n     * @return true if operation is successfully executed, false otherwise\r\n     */\r\n    public boolean addUser (User u) {\r\n        try {\r\n            Document doc = new Document(\"username\", u.getUsername())\r\n                                .append(\"email\", u.getEmail())\r\n                                .append(\"password\", u.getPassword());\r\n\r\n            if (u.getFirstName() != null)\r\n                doc.append(\"firstName\", u.getFirstName());\r\n            if (u.getLastName() != null)\r\n                doc.append(\"lastName\", u.getLastName());\r\n            if (u.getPicture() != null)\r\n                doc.append(\"picture\", u.getPicture());\r\n            if (u.getAge() != -1)\r\n                doc.append(\"age\", u.getAge());\r\n\r\n            doc.append(\"readingLists\", u.getReadingLists());\r\n\r\n            usersCollection.insertOne(doc);\r\n            return true;\r\n\r\n        } catch (Exception e) {\r\n            System.out.println(\"Error in adding a new user\");\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Function that deletes the user from the database\r\n     * @param u user to delete\r\n     * @return true if operation is successfully executed, false otherwise\r\n     */\r\n    public boolean deleteUser(User u) {\r\n        try {\r\n            usersCollection.deleteOne(eq(\"username\", u.getUsername()));\r\n            return true;\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            System.err.println(\"Error in delete user\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Edit an already present user\r\n     * @param u the new user information to replace the old one\r\n     * @return  true if operation is successfully executed, false otherwise\r\n     */\r\n    public boolean updateUser (User u){\r\n        try {\r\n            Document doc = new Document().append(\"username\", u.getUsername());\r\n            if (!u.getPassword().isEmpty())\r\n                doc.append(\"password\", u.getPassword());\r\n            if (!u.getFirstName().isEmpty())\r\n                doc.append(\"firstName\", u.getFirstName());\r\n            if (!u.getLastName().isEmpty())\r\n                doc.append(\"lastName\", u.getLastName());\r\n            if (!u.getPicture().isEmpty())\r\n                doc.append(\"picture\", u.getPicture());\r\n            if (u.getAge() != -1)\r\n                doc.append(\"age\", u.getAge());\r\n\r\n            Bson updateOperation = new Document(\"$set\", doc);\r\n            usersCollection.updateOne(new Document(\"username\", u.getUsername()), updateOperation);\r\n            return true;\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            ex.printStackTrace();\r\n            System.err.println(\"Error in updating user on MongoDB\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Search a user by his username\r\n     * @param username username of the user\r\n     * @return User\r\n     */\r\n    public User getUserByUsername (String username) {\r\n        Document result = (Document) usersCollection.find((eq(\"username\", username))).first();\r\n        if (result == null) {\r\n            System.out.println(\"User \" + username + \" do not found.\");\r\n            return null;\r\n        }\r\n\r\n        Gson gson = new Gson();\r\n        return gson.fromJson(gson.toJson(result), User.class);\r\n    }\r\n\r\n    /**\r\n     * Add a new paper in MongoDB\r\n     * @param p The object Paper which contains all the necessary information about it\r\n     * @return  true if operation is successfully executed, false otherwise\r\n     */\r\n    public boolean addPaper (Paper p) {\r\n        try {\r\n            Document doc = new Document();\r\n            //Data conversion to string\r\n            SimpleDateFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n            String format = formatter.format(p.getPublished());\r\n\r\n            //Check paper source\r\n            if(!p.getArxiv_id().isEmpty())\r\n                doc.append(\"arxiv_id\", p.getArxiv_id()).append(\"vixra_id\", Float.NaN);\r\n            else\r\n                doc.append(\"arxiv_id\", Float.NaN).append(\"vixra_id\", p.getVixra_id());\r\n\r\n            doc.append(\"_title\", p.getTitle())\r\n                    .append(\"_abstract\", p.getAbstract())\r\n                    .append(\"category\", p.getCategory())\r\n                    .append(\"authors\", p.getAuthors())\r\n                    .append(\"published\", format)\r\n                    //No comment on insert\r\n                    .append(\"comments\", null);\r\n\r\n            papersCollection.insertOne(doc);\r\n            return true;\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            System.err.println(\"Error in adding a new paper\");\r\n            ex.printStackTrace();\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add a new comment\r\n     * @param id Id of the paper\r\n     * @param text text of the comment\r\n     * @return  true if operation is successfully executed, false otherwise\r\n     */\r\n    public boolean addComment (String id, String text, String user) {\r\n        try {\r\n            SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\r\n            Document comment = new Document(\"username\", user)\r\n                    .append(\"text\",text)\r\n                    .append(\"timestamp\",dateFormat.format(new Date()));\r\n\r\n            Bson find = or(eq(\"arxiv_id\", id), eq(\"vixra_id\", id));\r\n            Bson update = Updates.addToSet(\"comments\", comment);\r\n            papersCollection.updateOne(find, update);\r\n            return true;\r\n        }\r\n        catch (Exception e)\r\n        {\r\n            System.out.println(\"Error in adding a commnet to a Paper\");\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Update the list of comments of a paper\r\n     * @param p\r\n     * @param comments\r\n     * @return  true if operation is successfully executed, false otherwise\r\n     */\r\n    public boolean updateComments(Paper p, List<Comment> comments){\r\n        try{\r\n            Bson update = new Document(\"comments\", comments);\r\n            Bson updateOperation = new Document(\"$set\", update);\r\n            if(!p.getArxiv_id().isEmpty())\r\n                papersCollection.updateOne(new Document(\"arxiv_id\", p.getArxiv_id()), updateOperation);\r\n            else\r\n                papersCollection.updateOne(new Document(\"vixra_id\", p.getVixra_id()), updateOperation);\r\n            return true;\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            ex.printStackTrace();\r\n            System.err.println(\"Error in updating user on MongoDB\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update an existing comment\r\n     * @param paper\r\n     * @param comment\r\n     */\r\n    public void updateComment(Paper paper, Comment comment){\r\n        List<Comment> comments = paper.getComments();\r\n        int i=0;\r\n        for (Comment c: comments\r\n        ) {\r\n            if(c.getUsername().equals(comment.getUsername()) && c.getTimestamp().equals(\r\n                    comment.getTimestamp())){\r\n                comments.set(i, comment);\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        updateComments(paper, comments);\r\n    }\r\n\r\n    /**\r\n     * Add a new comment\r\n     * @param paper\r\n     * @param comment\r\n     */\r\n    public void deleteComment (Paper paper, Comment comment) {\r\n        List<Comment> comments = paper.getComments();\r\n        int n = 0;\r\n        int d = 0;\r\n        for (Comment c : comments){\r\n            if (c.getTimestamp().equals(comment.getTimestamp()) && c.getUsername().equals(comment.getUsername())) {\r\n                d = n;\r\n                break;\r\n            }\r\n        n++;\r\n        }\r\n        comments.remove(d);\r\n        updateComments(paper, comments);\r\n    }\r\n    /**\r\n     * Function that deletes the paper from the database\r\n     * @param p Paper to delete\r\n     * @return true if operation is successfully executed, false otherwise\r\n     */\r\n    public boolean deletePaper (Paper p) {\r\n        try {\r\n            if(!p.getArxiv_id().isEmpty())\r\n                papersCollection.deleteOne(eq(\"arxiv_id\", p.getArxiv_id()));\r\n            else\r\n                papersCollection.deleteOne(eq(\"vixra_id\", p.getVixra_id()));\r\n\r\n            return true;\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            System.err.println(\"Error in delete paper\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Function that return the paper that matches the id\r\n     * @param id of the paper to retrieve\r\n     * @return the paper object\r\n     */\r\n    public Paper getPaperById (String id) {\r\n        try {\r\n            Paper p = null;\r\n            Gson gson = new GsonBuilder().setDateFormat(\"yyyy-MM-dd hh:mm:ss\").create();\r\n\r\n            Document myDoc = (Document) papersCollection.find(\r\n                    or(eq(\"arxiv_id\", id), eq(\"vixra_id\", id))).first();\r\n            p = gson.fromJson(gson.toJson(myDoc), Paper.class);\r\n            return p;\r\n        }\r\n        catch (JsonSyntaxException e) {\r\n            e.printStackTrace();\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param title\r\n     * @param author\r\n     * @param start_date\r\n     * @param end_date\r\n     * @param category\r\n     * @return\r\n     */\r\n    public List<Paper> searchPapersByParameters (String title, String author, String start_date,\r\n                                                 String end_date, String category, int skip, int limit) {\r\n        List<Paper> papers = new ArrayList<>();\r\n        Gson gson = new GsonBuilder().setDateFormat(\"yyyy-MM-dd hh:mm:ss\").create();\r\n\r\n        List<Bson> pipeline = new ArrayList<>();\r\n\r\n        if (!title.isEmpty()) {\r\n            Pattern pattern1 = Pattern.compile(\"^.*\" + title + \".*$\", Pattern.CASE_INSENSITIVE);\r\n            pipeline.add(Aggregates.match(Filters.regex(\"title\", pattern1)));\r\n        }\r\n\r\n        if (!author.isEmpty()) {\r\n            Pattern pattern2 = Pattern.compile(\"^.*\" + author + \".*$\", Pattern.CASE_INSENSITIVE);\r\n            pipeline.add(Aggregates.match(Filters.regex(\"authors\", pattern2)));\r\n        }\r\n\r\n        if (!start_date.isEmpty()) {\r\n            pipeline.add(Aggregates.match(and(Filters.gte(\"published\", start_date))));\r\n        }\r\n\r\n        if(!end_date.isEmpty()) {\r\n            pipeline.add(Aggregates.match(and(Filters.lte(\"published\", end_date))));\r\n        }\r\n\r\n        if (!category.isEmpty()) {\r\n            pipeline.add(Aggregates.match(Filters.eq(\"category\", category)));\r\n        }\r\n\r\n        pipeline.add(sort(descending(\"published\")));\r\n        pipeline.add(skip(skip * limit));\r\n        pipeline.add(limit(limit));\r\n\r\n        List<Document> results = (List<Document>) papersCollection.aggregate(pipeline)\r\n                .into(new ArrayList<>());\r\n        Type papersListType = new TypeToken<ArrayList<Paper>>(){}.getType();\r\n        papers = gson.fromJson(gson.toJson(results), papersListType);\r\n        return papers;\r\n    }\r\n\r\n    /**\r\n     * Function that return the list of papers that partially match a title\r\n     * @param title title of the papers\r\n     * @return The list of papers\r\n     */\r\n    public List<Paper> searchPapersByTitle(String title) {\r\n        List<Paper> papers = new ArrayList<>();\r\n        Gson gson = new GsonBuilder().setDateFormat(\"yyyy-MM-dd hh:mm:ss\").create();\r\n        Pattern pattern = Pattern.compile(\"^.*\" + title + \".*$\", Pattern.CASE_INSENSITIVE);\r\n        Bson match = Aggregates.match(Filters.regex(\"title\", pattern));\r\n        Bson sort = sort(descending(\"published\"));\r\n\r\n        /*\r\n        Bson limit = limit(10);\r\n        Bson skip = skip();\r\n         */\r\n\r\n        List<Document> results = (List<Document>) papersCollection.aggregate(Arrays.asList(match, sort))\r\n                .into(new ArrayList<>());\r\n        Type papersListType = new TypeToken<ArrayList<Paper>>(){}.getType();\r\n        papers = gson.fromJson(gson.toJson(results), papersListType);\r\n        return papers;\r\n    }\r\n\r\n    /**\r\n     * Function that retrieves all the papers published by an author\r\n     * @param author name of the author\r\n     * @return list of Papers\r\n     */\r\n    public List<Paper> searchPaperByAuthor(String author) {\r\n        Gson gson = new GsonBuilder().setDateFormat(\"yyyy-MM-dd\").serializeSpecialFloatingPointValues().create();\r\n        List<Paper> results = new ArrayList<>();\r\n        Consumer<Document> transformDocument = doc -> {\r\n            Paper paper = gson.fromJson(gson.toJson(doc), Paper.class);\r\n            results.add(paper);\r\n        };\r\n        papersCollection.find(eq(\"authors\", author)).forEach(transformDocument);\r\n        return results;\r\n    }\r\n\r\n    /**\r\n     * Return all the papers between a given time interval\r\n     * @param start_date start date\r\n     * @param end_date end date\r\n     * @return the list of Papers\r\n     */\r\n    public List<Paper> searchPapersByPublicationDate (String start_date, String end_date) {\r\n        List<Paper> papers = new ArrayList<>();\r\n        Gson gson = new GsonBuilder().setDateFormat(\"yyyy-MM-dd hh:mm:ss\").create();\r\n\r\n        Bson match = match(and(\r\n                Filters.gte(\"published\", start_date),\r\n                Filters.lte(\"published\", end_date)));\r\n        Bson sort = sort(descending(\"published\"));\r\n\r\n        /*\r\n        Bson limit = limit(10);\r\n        Bson skip = skip();\r\n         */\r\n\r\n        List<Document> results = (List<Document>) papersCollection.aggregate(Arrays.asList(match, sort))\r\n                .into(new ArrayList<>());\r\n        Type papersListType = new TypeToken<ArrayList<Paper>>(){}.getType();\r\n        papers = gson.fromJson(gson.toJson(results), papersListType);\r\n        return papers;\r\n    }\r\n\r\n    /**\r\n     * Function that return the list of papers related to a category\r\n     * @param category Category of the papers\r\n     * @return The list of papers\r\n     */\r\n    public List<Paper> searchPapersByCategory(String category){\r\n\r\n        List<Paper> papers = new ArrayList<>();\r\n        Gson gson = new GsonBuilder().setDateFormat(\"yyyy-MM-dd hh:mm:ss\").create();\r\n        List<Document> results = (List<Document>) papersCollection.find(eq(\"category\", category))\r\n                .into(new ArrayList<>());\r\n        Type paperListType = new TypeToken<ArrayList<Paper>>(){}.getType();\r\n        papers = gson.fromJson(gson.toJson(results), paperListType);\r\n        return papers;\r\n    }\r\n\r\n    /**\r\n     * Add a new empty reading list called \"title\" list at the user identify by username\r\n     * @param username username of the user\r\n     * @param title title of the new reading list\r\n     * @return true if it adds the reading list, otherwise it returns false\r\n     */\r\n    public boolean createReadingList(String username, String title) {\r\n        // check if there are other list with the same name\r\n        Document document = (Document) usersCollection.find(and(eq(\"username\", username),\r\n                eq(\"readingLists.title\", title))).first();\r\n        if (document != null) {\r\n            System.err.println(\"ERROR: name already in use.\");\r\n            return false;\r\n        }\r\n        // create the new reading_list\r\n        Document readingList = new Document(\"title\", title)\r\n                .append(\"papers\", Arrays.asList());\r\n        // insert the new reading_list\r\n        usersCollection.updateOne(\r\n                eq(\"username\", username),\r\n                new Document().append(\r\n                        \"$push\",\r\n                        new Document(\"readingLists\", readingList)\r\n                )\r\n        );\r\n        System.out.println(\"Reading list \" + title + \" has been added\");\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Delete the reading list of user by specifying the title\r\n     * @param username username of the user\r\n     * @param title title of the reading list which i want remove\r\n     * @return true if it removes the reading list, otherwise it returns false\r\n     */\r\n    public boolean deleteReadingList(String username, String title){\r\n        Bson filter = new Document().append(\"username\", username);\r\n        Bson fields = new Document().append(\"reading_lists\", new Document(\"title\", title));\r\n        Bson update = new Document(\"$pull\", fields);\r\n        UpdateResult updateResult = usersCollection.updateOne(filter, update);\r\n        if (updateResult.getModifiedCount() == 0){\r\n            System.err.println(\"ERROR: can not delete the reading list \" + title);\r\n            return false;\r\n        } else {\r\n            System.out.println(\"Reading list \" + title + \" has been deleted\");\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Method that adds a Paper to a ReadingList\r\n     * @param user owner of the ReadingList\r\n     * @param p Paper\r\n     * @return true if the operation is successfully executed, false otherwise\r\n     */\r\n    public UpdateResult addPaperToReadingList(String user, String title, Paper p) {\r\n        Document paperReduced = new Document(\"arxiv_id\", p.getArxiv_id())\r\n                .append(\"vixra_id\", p.getVixra_id())\r\n                .append(\"title\", p.getTitle())\r\n                .append(\"auhtors\", p.getAuthors())\r\n                .append(\"category\", p.getCategory());\r\n        Bson find = and(eq(\"username\", user),\r\n                eq(\"readingLists.title\", title));\r\n        Bson update = Updates.addToSet(\"readingLists.$.papers\", paperReduced);\r\n        UpdateResult result = usersCollection.updateOne(find, update);\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Method that remove a Paper from a ReadingList\r\n     * @param user ReadingList\r\n     * @param p Paper\r\n     * @return true if the operation is successfully executed, false otherwise\r\n     */\r\n    public boolean removePaperFromReadingList(String user, String title, Paper p) {\r\n        try {\r\n            Document paperReduced = new Document(\"arxiv_id\", p.getArxiv_id())\r\n                    .append(\"vixra_id\", p.getVixra_id())\r\n                    .append(\"title\", p.getTitle())\r\n                    .append(\"auhtors\", p.getAuthors());\r\n\r\n            Bson find = and(eq(\"username\", user),\r\n                    eq(\"reading_lists.title\", title));\r\n            Bson delete = Updates.pull(\"reading_lists.$.papers\", paperReduced);\r\n            usersCollection.updateOne(find, delete);\r\n            return true;\r\n        }\r\n        catch (Exception e)\r\n        {\r\n            System.out.println(\"Error in removing a paper from a Reading List\");\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns all the Reading Lists in the database MongoDB\r\n     * @return The list of the Reading List\r\n     */\r\n    public List<ReadingList> showReadingList() {\r\n        List<ReadingList> readingLists = new ArrayList<>();\r\n        Gson gson = new GsonBuilder().serializeNulls().create();\r\n        Bson unwind = unwind(\"$reading_lists\");\r\n        Bson project = project(fields(excludeId(), computed(\"ReadingList\", \"$reading_lists\")));\r\n\r\n        MongoCursor<Document> iterator = (MongoCursor<Document>)\r\n                usersCollection.aggregate(Arrays.asList(unwind, project)).iterator();\r\n\r\n        Type readingListType = new TypeToken<ArrayList<ReadingList>>(){}.getType();\r\n        while (iterator.hasNext())\r\n        {\r\n            Document document = iterator.next();\r\n            System.out.println(document);\r\n            Document ReadingListDocument = (Document) document.get(\"ReadingList\");\r\n            ReadingList readingList = gson.fromJson(gson.toJson(ReadingListDocument), ReadingList.class);\r\n            readingLists.add(readingList);\r\n        }\r\n\r\n        return readingLists;\r\n    }\r\n\r\n    /**\r\n     * Function that return the ReadingLists given the user\r\n     * @param username Username of the user\r\n     * @return  The list of reading lists\r\n     */\r\n    public List<ReadingList> getReadingListByUser (String username){\r\n        List<ReadingList> readingLists = new ArrayList<>();\r\n        Gson gson = new GsonBuilder().serializeNulls().create();\r\n\r\n        Bson match = match(eq(\"username\", username));\r\n        Bson unwind = unwind(\"$reading_lists\");\r\n        Bson project = project(fields(excludeId() ,computed(\"ReadingList\", \"$reading_lists\")));\r\n        MongoCursor<Document> iterator = (MongoCursor<Document>) usersCollection.aggregate(Arrays.asList(match, unwind, project)).iterator();\r\n        while (iterator.hasNext())\r\n        {\r\n            Document document = iterator.next();\r\n            Document ReadingListDocument = (Document) document.get(\"ReadingList\");\r\n            ReadingList readingList = gson.fromJson(gson.toJson(ReadingListDocument), ReadingList.class);\r\n            readingLists.add(readingList);\r\n        }\r\n\r\n        return readingLists;\r\n    }\r\n\r\n    /**\r\n     * Function that return the ReadingLists given the user and the name\r\n     * @param username Username of the user\r\n     * @param title Name of the reading list\r\n     * @return  The list of reading lists\r\n     */\r\n    public ReadingList getReadingList (String username, String title) {\r\n        ReadingList readingList = null;\r\n        Gson gson = new GsonBuilder().serializeNulls().create();\r\n\r\n        Bson match = match(eq(\"username\", username));\r\n        Bson unwind = unwind(\"$reading_lists\");\r\n        Bson match2 = match(eq(\"reading_lists.title\", title));\r\n        Bson project = project(fields(excludeId(), computed(\"ReadingList\", \"$reading_lists\")));\r\n        MongoCursor<Document> iterator = (MongoCursor<Document>) usersCollection.aggregate(Arrays.asList(match, unwind, match2, project)).iterator();\r\n        if(iterator.hasNext()){\r\n            Document document = iterator.next();\r\n            Document ReadingListDocument = (Document) document.get(\"ReadingList\");\r\n            readingList = gson.fromJson(gson.toJson(ReadingListDocument), ReadingList.class);\r\n        }\r\n        return readingList;\r\n    }\r\n\r\n    /**\r\n     * Function that returns the most common category in a Reading List\r\n     * @param user Reading List to process\r\n     * @return the name of the category\r\n     */\r\n    public String getMostCommonCategoryInReadingList(String user, String title) {\r\n\r\n        Bson match1 = match(Filters.eq(\"username\", user));\r\n        Bson unwind1 = unwind(\"$reading_lists\");\r\n        Bson match2 = match(Filters.eq(\"reading_lists.title\", title));\r\n        Bson unwind2 = unwind(\"$reading_lists.papers\");\r\n        Bson group = group(\"$reading_lists.papers.category\",\r\n                sum(\"nPapers\", 1));\r\n        Bson sort = sort(descending(\"nPapers\"));\r\n        Bson project = project(fields(computed(\"category\", \"$_id\"),\r\n                excludeId(), include(\"nPapers\")));\r\n\r\n        Document doc = (Document) usersCollection.aggregate(\r\n                Arrays.asList(match1, unwind1, match2, unwind2, group, sort, project)).first();\r\n\r\n        String mostCommonCategory = doc.getString(\"category\");\r\n\r\n        return mostCommonCategory;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @return\r\n     */\r\n    public List<Pair<String, Integer>> getCategoriesSummaryByLikes(/*String option*/) {\r\n\r\n        List<Pair<String, Integer>> topCategories = new ArrayList<>();\r\n\r\n        Bson group = group(\"$category\", sum(\"nPapers\", 1));\r\n        Bson sort = sort(descending(\"nPapers\"));\r\n        Bson project = project(fields(computed(\"category\", \"$_id\"),\r\n                excludeId(), include(\"nPapers\")));\r\n\r\n        try(MongoCursor<Document> cursor = papersCollection.aggregate(Arrays.asList(group, sort, project))\r\n                                    .iterator()) {\r\n            while(cursor.hasNext()) {\r\n                Document doc = cursor.next();\r\n                String category = doc.getString(\"category\");\r\n                int nPapers = doc.getInteger(\"nPapers\");\r\n                topCategories.add(new Pair<>(category, nPapers));\r\n            }\r\n        }\r\n        catch (Exception e) {\r\n            System.out.println(\"Error in getting number of papers by category\");\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return topCategories;\r\n    }\r\n\r\n    /*Weekly/Monthly/All time summary of the categories by number of papers Published */\r\n    /**\r\n     * Function that return the top categories by the number of papaer published\r\n     * @param start initial date\r\n     * @param finish final date\r\n     * @param number number of results to show\r\n     * @return The list of the most common categories\r\n     */\r\n    public List<String> summaryOfCategory (String start, String finish, int number){\r\n        List<String> mostCommonCategories = new ArrayList<>();\r\n\r\n        Bson match = match(and(gte(\"published\", start), lte(\"published\", finish)));\r\n        Bson group = group(\"$category\", sum(\"totalPaper\", 1));\r\n        Bson project = project(fields(excludeId(), computed(\"category\", \"$_id\"), include(\"totalPaper\")));\r\n        Bson sort = sort(descending(\"totalPaper\"));\r\n        Bson limit = limit(number);\r\n\r\n        List<Document> results = (List<Document>) papersCollection.aggregate(Arrays.asList(match, group, project, sort, limit)).into(new ArrayList<>());\r\n\r\n        for (Document document: results)\r\n        {\r\n            mostCommonCategories.add(document.getString(\"category\"));\r\n        }\r\n        return mostCommonCategories;\r\n    }\r\n\r\n    /*Users with the highest number of categories in their reading lists  */\r\n    /**\r\n     * Function that return a list of User with the highest number of reading lists\r\n     * @param number First \"number\" users\r\n     * @return  The list of users\r\n     */\r\n    public List<String> searchUsersWithHighestNumberOfCategories (int number)\r\n    {\r\n        List<String> mostCommonCategories = new ArrayList<>();\r\n\r\n        Bson unwind1 = unwind(\"$reading_lists\");\r\n        Bson unwind2 = unwind(\"$reading_lists.papers\");\r\n        Bson groupMultiple = new Document(\"$group\",\r\n                new Document(\"_id\", new Document(\"username\", \"$username\").append(\"category\", \"$reading_lists.papers.category\")));\r\n        Bson group = group(\"$_id.username\", sum(\"totalCategory\", 1));\r\n        Bson project = project(fields(excludeId(), computed(\"username\", \"$_id\"), include(\"totalCategory\")));\r\n        Bson sort = sort(descending(\"totalCategory\"));\r\n        Bson limit = limit(number);\r\n\r\n        List<Document> results = (List<Document>) usersCollection.aggregate(Arrays.asList(unwind1, unwind2, groupMultiple, group, project, sort, limit)).into(new ArrayList<>());\r\n        for (Document document: results)\r\n        {\r\n            mostCommonCategories.add(document.getString(\"username\"));\r\n        }\r\n        return mostCommonCategories;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Braws all comments that has been written \"numDays\" ago\r\n     * @param numDays how may day i want to scan\r\n     * @return list of comments\r\n     */\r\n    public List<Comment> searchLastComments(int numDays) {\r\n        // create the date\r\n        LocalDateTime localDateTime = LocalDateTime.now().minusDays(numDays);\r\n        LocalDateTime startOfDay = localDateTime.toLocalDate().atStartOfDay();\r\n        String filterDate = startOfDay.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\"));\r\n\r\n        Gson gson = new GsonBuilder().setDateFormat(\"yyyy-MM-dd HH:mm:ss\").serializeSpecialFloatingPointValues().create();\r\n        List<Comment> results = new ArrayList<>();\r\n        Consumer<Document> takeComments = doc -> {\r\n            Document docComments = (Document) doc.get(\"comments\");\r\n            Comment comment = gson.fromJson(gson.toJson(docComments), Comment.class);\r\n            results.add(comment);\r\n        };\r\n\r\n        Bson unwind = unwind(\"$comments\");\r\n        Bson filter = match(gte(\"comments.timestamp\", filterDate));\r\n        Bson sort = sort(ascending(\"comments.timestamp\"));\r\n        papersCollection.aggregate(Arrays.asList(unwind, filter, sort)).forEach(takeComments);\r\n\r\n        return results;\r\n    }\r\n\r\n    /**\r\n     * Browse the top categories with more comments\r\n     * @param period (all, month, week)\r\n     * @param top (positive integer)\r\n     * @return HashMap with the category and the number of comments\r\n     */\r\n    public HashMap<String, Integer> summaryCategoriesByComments(String period, int top) {\r\n        LocalDateTime localDateTime = LocalDateTime.now();\r\n        LocalDateTime startOfDay;\r\n        switch (period) {\r\n            case \"all\" -> startOfDay = LocalDateTime.MIN;\r\n            case \"month\" -> startOfDay = localDateTime.toLocalDate().atStartOfDay().minusMonths(1);\r\n            case \"week\" -> startOfDay = localDateTime.toLocalDate().atStartOfDay().minusWeeks(1);\r\n            default -> {\r\n                System.err.println(\"ERROR: Wrong period.\");\r\n                return null;\r\n            }\r\n        }\r\n        String filterDate = startOfDay.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\"));\r\n\r\n        HashMap<String, Integer> results = new HashMap<>();\r\n        Consumer<Document> rankCategories = doc ->\r\n                results.put((String) doc.get(\"_id\"), (Integer) doc.get(\"tots\"));\r\n\r\n        Bson unwind = unwind(\"$comments\");\r\n        Bson filter = match(gte(\"comments.timestamp\", filterDate));\r\n        Bson group = group(\"$category\", sum(\"tots\", 1));\r\n        Bson sort = sort(Indexes.descending(\"tots\"));\r\n        Bson limit = limit(top);\r\n        papersCollection.aggregate(Arrays.asList(unwind, filter, group, sort, limit)).forEach(rankCategories);\r\n\r\n        return results;\r\n    }\r\n\r\n    /**\r\n     * Browse the top papers with more comments\r\n     * @param period (all, month, week)\r\n     * @param top (positive integer)\r\n     * @return HashMap with the title and the number of comments\r\n     */\r\n    public HashMap<String, Integer> summaryPapersByComments(String period, int top) {\r\n        LocalDateTime localDateTime = LocalDateTime.now();\r\n        LocalDateTime startOfDay;\r\n        switch (period) {\r\n            case \"all\" -> startOfDay = LocalDateTime.MIN;\r\n            case \"month\" -> startOfDay = localDateTime.toLocalDate().atStartOfDay().minusMonths(1);\r\n            case \"week\" -> startOfDay = localDateTime.toLocalDate().atStartOfDay().minusWeeks(1);\r\n            default -> {\r\n                System.err.println(\"ERROR: Wrong period.\");\r\n                return null;\r\n            }\r\n        }\r\n        String filterDate = startOfDay.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\"));\r\n\r\n        HashMap<String, Integer> results = new HashMap<>();\r\n        Consumer<Document> rankPapers = doc ->\r\n                results.put((String) doc.get(\"_id\"), (Integer) doc.get(\"tots\"));\r\n\r\n        Bson unwind = unwind(\"$comments\");\r\n        Bson filter = match(gte(\"comments.timestamp\", filterDate));\r\n        Bson group = group(\"$title\", sum(\"tots\", 1));\r\n        Bson sort = sort(Indexes.descending(\"tots\"));\r\n        Bson limit = limit(top);\r\n        papersCollection.aggregate(Arrays.asList(unwind, filter, group, sort, limit)).forEach(rankPapers);\r\n\r\n        return results;\r\n    }\r\n\r\n    public List<String> getCategories() {\r\n        List<String> categoriesList = new ArrayList<>();\r\n        papersCollection.distinct(\"category\", String.class).into(categoriesList);\r\n        return categoriesList;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/PaperRaterApp/src/main/java/it/unipi/dii/lsmd/paperraterapp/persistence/MongoDBManager.java b/PaperRaterApp/src/main/java/it/unipi/dii/lsmd/paperraterapp/persistence/MongoDBManager.java
--- a/PaperRaterApp/src/main/java/it/unipi/dii/lsmd/paperraterapp/persistence/MongoDBManager.java	(revision 110d66cb3dda4d59ccc1597de24a36b34d7378ea)
+++ b/PaperRaterApp/src/main/java/it/unipi/dii/lsmd/paperraterapp/persistence/MongoDBManager.java	(date 1640602108286)
@@ -810,7 +810,7 @@
      * @param top (positive integer)
      * @return HashMap with the category and the number of comments
      */
-    public HashMap<String, Integer> summaryCategoriesByComments(String period, int top) {
+    public List<Pair<String, Integer>> summaryCategoriesByComments(String period, int top) {
         LocalDateTime localDateTime = LocalDateTime.now();
         LocalDateTime startOfDay;
         switch (period) {
@@ -824,9 +824,9 @@
         }
         String filterDate = startOfDay.format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss"));
 
-        HashMap<String, Integer> results = new HashMap<>();
+        List<Pair<String, Integer>> results = new ArrayList<>();
         Consumer<Document> rankCategories = doc ->
-                results.put((String) doc.get("_id"), (Integer) doc.get("tots"));
+                results.add(new Pair<>((String) doc.get("_id"), (Integer) doc.get("tots")));
 
         Bson unwind = unwind("$comments");
         Bson filter = match(gte("comments.timestamp", filterDate));
@@ -844,7 +844,7 @@
      * @param top (positive integer)
      * @return HashMap with the title and the number of comments
      */
-    public HashMap<String, Integer> summaryPapersByComments(String period, int top) {
+    public List<Pair<String, Integer>> summaryPapersByComments(String period, int top) {
         LocalDateTime localDateTime = LocalDateTime.now();
         LocalDateTime startOfDay;
         switch (period) {
@@ -858,9 +858,9 @@
         }
         String filterDate = startOfDay.format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss"));
 
-        HashMap<String, Integer> results = new HashMap<>();
+        List<Pair<String, Integer>> results = new ArrayList<>();
         Consumer<Document> rankPapers = doc ->
-                results.put((String) doc.get("_id"), (Integer) doc.get("tots"));
+                results.add(new Pair<>((String) doc.get("_id"), (Integer) doc.get("tots")));
 
         Bson unwind = unwind("$comments");
         Bson filter = match(gte("comments.timestamp", filterDate));
Index: PaperRaterApp/src/main/java/it/unipi/dii/lsmd/paperraterapp/controller/LoginController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.unipi.dii.lsmd.paperraterapp.controller;\r\n\r\nimport it.unipi.dii.lsmd.paperraterapp.model.Session;\r\nimport it.unipi.dii.lsmd.paperraterapp.model.User;\r\nimport it.unipi.dii.lsmd.paperraterapp.persistence.MongoDBManager;\r\nimport it.unipi.dii.lsmd.paperraterapp.persistence.MongoDriver;\r\nimport it.unipi.dii.lsmd.paperraterapp.persistence.Neo4jManagerE;\r\nimport it.unipi.dii.lsmd.paperraterapp.utils.Utils;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.PasswordField;\r\nimport javafx.scene.control.TextField;\r\n\r\npublic class LoginController {\r\n\r\n    private MongoDBManager mongoMan;\r\n    private Neo4jManagerE neoMan;\r\n    @FXML private Button loginButton;\r\n    @FXML private PasswordField passwordTf;\r\n    @FXML private Button registerButton;\r\n    @FXML private TextField usernameTf;\r\n\r\n    public void initialize () {\r\n       // neoMan = new Neo4jManagerE(Neo4jDriverE.getInstance().openConnection());\r\n        mongoMan = new MongoDBManager(MongoDriver.getInstance().openConnection());\r\n    }\r\n\r\n    @FXML\r\n    void checkCredential(ActionEvent event) {\r\n        String username = usernameTf.getText();\r\n        String password = passwordTf.getText();\r\n\r\n        User u = mongoMan.login(username, password);\r\n\r\n        if (u == null) {\r\n            usernameTf.setText(\"\");\r\n            passwordTf.setText(\"\");\r\n            System.out.println(\"Username or password not valid\");\r\n        }\r\n        else {\r\n            Session.getInstance().setUser(u);\r\n            Utils.changeScene(\"/it/unipi/dii/lsmd/paperraterapp/layout/browser.fxml\", event);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * If the user click the button register this function\r\n     * will change the app stage and show the register form\r\n     *\r\n     * @param event\r\n     */\r\n    @FXML\r\n    void loadRegisterForm(ActionEvent event) {\r\n        Utils.changeScene(\"/it/unipi/dii/lsmd/paperraterapp/layout/register.fxml\", event);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/PaperRaterApp/src/main/java/it/unipi/dii/lsmd/paperraterapp/controller/LoginController.java b/PaperRaterApp/src/main/java/it/unipi/dii/lsmd/paperraterapp/controller/LoginController.java
--- a/PaperRaterApp/src/main/java/it/unipi/dii/lsmd/paperraterapp/controller/LoginController.java	(revision 110d66cb3dda4d59ccc1597de24a36b34d7378ea)
+++ b/PaperRaterApp/src/main/java/it/unipi/dii/lsmd/paperraterapp/controller/LoginController.java	(date 1640600042555)
@@ -9,6 +9,7 @@
 import javafx.event.ActionEvent;
 import javafx.fxml.FXML;
 import javafx.scene.control.Button;
+import javafx.scene.control.Label;
 import javafx.scene.control.PasswordField;
 import javafx.scene.control.TextField;
 
@@ -20,10 +21,12 @@
     @FXML private PasswordField passwordTf;
     @FXML private Button registerButton;
     @FXML private TextField usernameTf;
+    @FXML private Label errorTf;
 
     public void initialize () {
        // neoMan = new Neo4jManagerE(Neo4jDriverE.getInstance().openConnection());
         mongoMan = new MongoDBManager(MongoDriver.getInstance().openConnection());
+        errorTf.setText("");
     }
 
     @FXML
@@ -36,6 +39,7 @@
         if (u == null) {
             usernameTf.setText("");
             passwordTf.setText("");
+            errorTf.setText("Username or password not valid.");
             System.out.println("Username or password not valid");
         }
         else {
Index: PaperRaterApp/src/main/resources/it/unipi/dii/lsmd/paperraterapp/layout/login.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import java.lang.String?>\r\n<?import javafx.scene.control.Button?>\r\n<?import javafx.scene.control.Label?>\r\n<?import javafx.scene.control.PasswordField?>\r\n<?import javafx.scene.control.TextField?>\r\n<?import javafx.scene.layout.AnchorPane?>\r\n<?import javafx.scene.text.Font?>\r\n\r\n<AnchorPane maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" minHeight=\"-Infinity\" minWidth=\"-Infinity\" prefHeight=\"500.0\" prefWidth=\"800.0\" styleClass=\"dark\" stylesheets=\"@../style/main.css\" xmlns=\"http://javafx.com/javafx/17\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"it.unipi.dii.lsmd.paperraterapp.controller.LoginController\">\r\n   <children>\r\n      <AnchorPane layoutX=\"447.0\" layoutY=\"49.0\" prefHeight=\"400.0\" prefWidth=\"306.0\" styleClass=\"lite\" stylesheets=\"@../style/main.css\">\r\n         <children>\r\n            <TextField fx:id=\"usernameTf\" layoutX=\"28.0\" layoutY=\"125.0\" prefHeight=\"25.0\" prefWidth=\"250.0\" promptText=\"Username\" styleClass=\"login\" stylesheets=\"@../style/main.css\">\r\n               <font>\r\n                  <Font size=\"14.0\" />\r\n               </font>\r\n            </TextField>\r\n            <PasswordField fx:id=\"passwordTf\" layoutX=\"28.0\" layoutY=\"218.0\" prefHeight=\"25.0\" prefWidth=\"250.0\" promptText=\"Password\" styleClass=\"login\" stylesheets=\"@../style/main.css\">\r\n               <font>\r\n                  <Font size=\"14.0\" />\r\n               </font>\r\n            </PasswordField>\r\n            <Button fx:id=\"loginButton\" layoutX=\"40.0\" layoutY=\"320.0\" mnemonicParsing=\"false\" onAction=\"#checkCredential\" prefHeight=\"25.0\" prefWidth=\"225.0\" stylesheets=\"@../style/main.css\" text=\"Login\" textFill=\"WHITE\">\r\n               <font>\r\n                  <Font size=\"14.0\" />\r\n               </font>\r\n               <styleClass>\r\n                  <String fx:value=\"buttonlog\" />\r\n                  <String fx:value=\"dynamic-button\" />\r\n               </styleClass>\r\n            </Button>\r\n            <Label layoutX=\"98.0\" layoutY=\"42.0\" text=\"Sign In\" textFill=\"WHITE\">\r\n               <font>\r\n                  <Font size=\"36.0\" />\r\n               </font>\r\n            </Label>\r\n         </children>\r\n      </AnchorPane>\r\n      <Label layoutX=\"14.0\" layoutY=\"168.0\" style=\"-fx-background-color: #3700B3;\" text=\"Welcome to PaperRater\" textFill=\"WHITE\">\r\n         <font>\r\n            <Font size=\"36.0\" />\r\n         </font>\r\n      </Label>\r\n      <Label layoutX=\"26.0\" layoutY=\"222.0\" prefHeight=\"27.0\" prefWidth=\"352.0\" text=\"The first social where the culture come\" textFill=\"WHITE\">\r\n         <font>\r\n            <Font size=\"18.0\" />\r\n         </font>\r\n      </Label>\r\n      <Label layoutX=\"26.0\" layoutY=\"250.0\" prefHeight=\"27.0\" prefWidth=\"352.0\" text=\"before the people\" textFill=\"WHITE\">\r\n         <font>\r\n            <Font size=\"18.0\" />\r\n         </font>\r\n      </Label>\r\n      <Button fx:id=\"registerButton\" layoutX=\"26.0\" layoutY=\"294.0\" mnemonicParsing=\"false\" onAction=\"#loadRegisterForm\" prefHeight=\"30.0\" prefWidth=\"154.0\" stylesheets=\"@../style/main.css\" text=\"Register\" textFill=\"WHITE\">\r\n         <font>\r\n            <Font size=\"14.0\" />\r\n         </font>\r\n         <styleClass>\r\n            <String fx:value=\"buttonlog\" />\r\n            <String fx:value=\"dynamic-button\" />\r\n         </styleClass>\r\n      </Button>\r\n   </children>\r\n</AnchorPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/PaperRaterApp/src/main/resources/it/unipi/dii/lsmd/paperraterapp/layout/login.fxml b/PaperRaterApp/src/main/resources/it/unipi/dii/lsmd/paperraterapp/layout/login.fxml
--- a/PaperRaterApp/src/main/resources/it/unipi/dii/lsmd/paperraterapp/layout/login.fxml	(revision 110d66cb3dda4d59ccc1597de24a36b34d7378ea)
+++ b/PaperRaterApp/src/main/resources/it/unipi/dii/lsmd/paperraterapp/layout/login.fxml	(date 1640600103436)
@@ -36,6 +36,11 @@
                   <Font size="36.0" />
                </font>
             </Label>
+            <Label fx:id="errorTf" alignment="CENTER" layoutX="14.0" layoutY="366.0" prefHeight="20.0" prefWidth="279.0" textFill="RED">
+               <font>
+                  <Font size="14.0" />
+               </font>
+            </Label>
          </children>
       </AnchorPane>
       <Label layoutX="14.0" layoutY="168.0" style="-fx-background-color: #3700B3;" text="Welcome to PaperRater" textFill="WHITE">
Index: PaperRaterApp/src/main/resources/it/unipi/dii/lsmd/paperraterapp/layout/browser.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import java.lang.String?>\r\n<?import javafx.geometry.Insets?>\r\n<?import javafx.scene.control.Button?>\r\n<?import javafx.scene.control.ComboBox?>\r\n<?import javafx.scene.control.DatePicker?>\r\n<?import javafx.scene.control.Label?>\r\n<?import javafx.scene.control.TextField?>\r\n<?import javafx.scene.image.Image?>\r\n<?import javafx.scene.image.ImageView?>\r\n<?import javafx.scene.layout.AnchorPane?>\r\n<?import javafx.scene.layout.BorderPane?>\r\n<?import javafx.scene.layout.ColumnConstraints?>\r\n<?import javafx.scene.layout.GridPane?>\r\n<?import javafx.scene.layout.HBox?>\r\n<?import javafx.scene.layout.VBox?>\r\n<?import javafx.scene.text.Font?>\r\n\r\n<AnchorPane prefHeight=\"810.0\" prefWidth=\"1315.0\" xmlns=\"http://javafx.com/javafx/17\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"it.unipi.dii.lsmd.paperraterapp.controller.BrowserController\">\r\n   <children>\r\n      <BorderPane prefHeight=\"200.0\" prefWidth=\"200.0\" stylesheets=\"@../style/main.css\" AnchorPane.bottomAnchor=\"0.0\" AnchorPane.leftAnchor=\"0.0\" AnchorPane.rightAnchor=\"0.0\" AnchorPane.topAnchor=\"0.0\">\r\n         <left>\r\n            <VBox alignment=\"TOP_CENTER\" prefHeight=\"200.0\" prefWidth=\"360.0\" styleClass=\"lite\" BorderPane.alignment=\"CENTER\">\r\n               <children>\r\n                  <HBox alignment=\"CENTER\" prefHeight=\"137.0\" prefWidth=\"300.0\">\r\n                     <children>\r\n                        <ImageView fitHeight=\"150.0\" fitWidth=\"273.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                           <image>\r\n                              <Image url=\"@../img/PRlogo.png\" />\r\n                           </image>\r\n                           <HBox.margin>\r\n                              <Insets bottom=\"50.0\" />\r\n                           </HBox.margin>\r\n                        </ImageView>\r\n                     </children>\r\n                  </HBox>\r\n                  <HBox alignment=\"CENTER\" prefHeight=\"65.0\" prefWidth=\"200.0\">\r\n                     <styleClass>\r\n                        <String fx:value=\"search-bar\" />\r\n                        <String fx:value=\"shadow\" />\r\n                     </styleClass>\r\n                     <children>\r\n                        <ComboBox fx:id=\"chooseType\" onAction=\"#activeResearch\" prefHeight=\"25.0\" prefWidth=\"169.0\" promptText=\"Type of research\" styleClass=\"transparent\" />\r\n                     </children>\r\n                     <VBox.margin>\r\n                        <Insets bottom=\"10.0\" left=\"30.0\" right=\"30.0\" top=\"10.0\" />\r\n                     </VBox.margin>\r\n                  </HBox>\r\n                  <HBox fx:id=\"keywordContainer\" alignment=\"CENTER\" prefHeight=\"65.0\" prefWidth=\"200.0\">\r\n                     <VBox.margin>\r\n                        <Insets bottom=\"10.0\" left=\"30.0\" right=\"30.0\" top=\"10.0\" />\r\n                     </VBox.margin>\r\n                     <children>\r\n                        <TextField fx:id=\"keywordTf\" alignment=\"CENTER\" prefHeight=\"30.0\" prefWidth=\"200.0\" promptText=\"Search by keywords\" styleClass=\"transparent\">\r\n                           <font>\r\n                              <Font size=\"14.0\" />\r\n                           </font>\r\n                        </TextField>\r\n                     </children>\r\n                     <styleClass>\r\n                        <String fx:value=\"search-bar\" />\r\n                        <String fx:value=\"shadow\" />\r\n                     </styleClass>\r\n                  </HBox>\r\n                  <HBox fx:id=\"dateContainer\" alignment=\"CENTER\" prefHeight=\"65.0\" prefWidth=\"200.0\">\r\n                     <styleClass>\r\n                        <String fx:value=\"search-bar\" />\r\n                        <String fx:value=\"shadow\" />\r\n                     </styleClass>\r\n                     <VBox.margin>\r\n                        <Insets bottom=\"10.0\" left=\"30.0\" right=\"30.0\" top=\"10.0\" />\r\n                     </VBox.margin>\r\n                     <children>\r\n                        <Label text=\"From:\" />\r\n                        <DatePicker fx:id=\"fromDate\" prefHeight=\"30.0\" prefWidth=\"111.0\" styleClass=\"transparent\">\r\n                           <HBox.margin>\r\n                              <Insets left=\"5.0\" right=\"5.0\" />\r\n                           </HBox.margin>\r\n                        </DatePicker>\r\n                        <Label text=\"To:\" />\r\n                        <DatePicker fx:id=\"toDate\" prefHeight=\"30.0\" prefWidth=\"111.0\" styleClass=\"transparent\">\r\n                           <HBox.margin>\r\n                              <Insets left=\"5.0\" right=\"5.0\" />\r\n                           </HBox.margin>\r\n                        </DatePicker>\r\n                     </children>\r\n                  </HBox>\r\n                  <HBox fx:id=\"categoryContainer\" alignment=\"CENTER\" prefHeight=\"65.0\" prefWidth=\"200.0\">\r\n                     <styleClass>\r\n                        <String fx:value=\"search-bar\" />\r\n                        <String fx:value=\"shadow\" />\r\n                     </styleClass>\r\n                     <VBox.margin>\r\n                        <Insets bottom=\"10.0\" left=\"30.0\" right=\"30.0\" top=\"10.0\" />\r\n                     </VBox.margin>\r\n                     <children>\r\n                        <ComboBox fx:id=\"chooseCategory\" prefHeight=\"25.0\" prefWidth=\"169.0\" promptText=\"Select category\" styleClass=\"transparent\" />\r\n                     </children>\r\n                  </HBox>\r\n                  <HBox fx:id=\"authorContainer\" alignment=\"CENTER\" prefHeight=\"65.0\" prefWidth=\"200.0\">\r\n                     <children>\r\n                        <TextField fx:id=\"authorTf\" alignment=\"CENTER\" prefHeight=\"30.0\" prefWidth=\"200.0\" promptText=\"Search by Author\" styleClass=\"transparent\">\r\n                           <font>\r\n                              <Font size=\"14.0\" />\r\n                           </font>\r\n                        </TextField>\r\n                     </children>\r\n                     <styleClass>\r\n                        <String fx:value=\"search-bar\" />\r\n                        <String fx:value=\"shadow\" />\r\n                     </styleClass>\r\n                     <VBox.margin>\r\n                        <Insets bottom=\"50.0\" left=\"30.0\" right=\"30.0\" top=\"10.0\" />\r\n                     </VBox.margin>\r\n                  </HBox>\r\n                  <Button fx:id=\"searchBt\" disable=\"true\" mnemonicParsing=\"false\" onAction=\"#startResearch\" prefHeight=\"30.0\" prefWidth=\"200.0\" text=\"Search\">\r\n                     <styleClass>\r\n                        <String fx:value=\"search-button\" />\r\n                        <String fx:value=\"dynamic-button\" />\r\n                     </styleClass></Button>\r\n                  <Label fx:id=\"errorTf\" alignment=\"CENTER\" textAlignment=\"CENTER\" textFill=\"RED\">\r\n                     <font>\r\n                        <Font size=\"14.0\" />\r\n                     </font>\r\n                     <VBox.margin>\r\n                        <Insets top=\"20.0\" />\r\n                     </VBox.margin>\r\n                  </Label>\r\n               </children>\r\n            </VBox>\r\n         </left>\r\n         <center>\r\n            <VBox prefHeight=\"65.0\" prefWidth=\"100.0\" BorderPane.alignment=\"CENTER\">\r\n               <children>\r\n                  <HBox alignment=\"CENTER\" prefHeight=\"75.0\" prefWidth=\"930.0\" styleClass=\"dark\">\r\n                     <VBox.margin>\r\n                        <Insets />\r\n                     </VBox.margin>\r\n                     <children>\r\n                        <HBox alignment=\"CENTER\" prefHeight=\"100.0\" prefWidth=\"200.0\" styleClass=\"search-bar\">\r\n                           <children>\r\n                              <ComboBox fx:id=\"chooseSuggestion\" onAction=\"#showSuggestion\" prefHeight=\"25.0\" prefWidth=\"169.0\" promptText=\"Suggestion\" styleClass=\"transparent\" />\r\n                           </children>\r\n                           <HBox.margin>\r\n                              <Insets bottom=\"10.0\" left=\"10.0\" right=\"10.0\" top=\"10.0\" />\r\n                           </HBox.margin>\r\n                        </HBox>\r\n                        <HBox alignment=\"CENTER\" layoutX=\"368.0\" layoutY=\"20.0\" prefHeight=\"100.0\" prefWidth=\"200.0\" styleClass=\"search-bar\">\r\n                           <children>\r\n                              <ComboBox fx:id=\"chooseAnalytics\" onAction=\"#showAnalytics\" prefHeight=\"25.0\" prefWidth=\"169.0\" promptText=\"Analytics\" styleClass=\"transparent\">\r\n                                 <HBox.margin>\r\n                                    <Insets />\r\n                                 </HBox.margin>\r\n                              </ComboBox>\r\n                           </children>\r\n                           <HBox.margin>\r\n                              <Insets bottom=\"10.0\" left=\"10.0\" right=\"10.0\" top=\"10.0\" />\r\n                           </HBox.margin>\r\n                        </HBox>\r\n                        <HBox alignment=\"CENTER\" layoutX=\"468.0\" layoutY=\"10.0\" prefHeight=\"100.0\" prefWidth=\"200.0\" styleClass=\"search-bar\">\r\n                           <children>\r\n                              <ComboBox fx:id=\"chooseSummary\" onAction=\"#showSummary\" prefHeight=\"25.0\" prefWidth=\"169.0\" promptText=\"Summary\" styleClass=\"transparent\">\r\n                                 <HBox.margin>\r\n                                    <Insets />\r\n                                 </HBox.margin>\r\n                              </ComboBox>\r\n                           </children>\r\n                           <HBox.margin>\r\n                              <Insets bottom=\"10.0\" left=\"10.0\" right=\"10.0\" top=\"10.0\" />\r\n                           </HBox.margin>\r\n                        </HBox>\r\n                        <Label fx:id=\"profileTf\" onMouseClicked=\"#goToProfilePage\" styleClass=\"dynamic-effect\" text=\"My Profile\" textAlignment=\"CENTER\" textFill=\"WHITE\" underline=\"true\">\r\n                           <font>\r\n                              <Font size=\"18.0\" />\r\n                           </font>\r\n                           <HBox.margin>\r\n                              <Insets left=\"50.0\" />\r\n                           </HBox.margin>\r\n                        </Label>\r\n                     </children>\r\n                  </HBox>\r\n                  <HBox alignment=\"CENTER_LEFT\" prefHeight=\"50.0\" prefWidth=\"200.0\">\r\n                     <children>\r\n                        <Button fx:id=\"backBt\" disable=\"true\" mnemonicParsing=\"false\">\r\n                           <graphic>\r\n                              <ImageView fitHeight=\"58.0\" fitWidth=\"88.0\" pickOnBounds=\"true\" preserveRatio=\"true\" styleClass=\"transparent\">\r\n                                 <image>\r\n                                    <Image url=\"@../img/back.png\" />\r\n                                 </image>\r\n                              </ImageView>\r\n                           </graphic>\r\n                           <styleClass>\r\n                              <String fx:value=\"buttonlog\" />\r\n                              <String fx:value=\"dynamic-button\" />\r\n                           </styleClass>\r\n                        </Button>\r\n                        <HBox alignment=\"TOP_RIGHT\" prefHeight=\"66.0\" prefWidth=\"750.0\" HBox.hgrow=\"ALWAYS\">\r\n                           <children>\r\n                              <HBox fx:id=\"pageContainer\" alignment=\"CENTER\" prefHeight=\"100.0\" prefWidth=\"200.0\" HBox.hgrow=\"ALWAYS\">\r\n                                 <children>\r\n                                    <Label fx:id=\"currentPage\" text=\"currpage\">\r\n                                       <font>\r\n                                          <Font size=\"18.0\" />\r\n                                       </font>\r\n                                    </Label>\r\n                                    <Label text=\"/\">\r\n                                       <font>\r\n                                          <Font size=\"18.0\" />\r\n                                       </font>\r\n                                       <HBox.margin>\r\n                                          <Insets left=\"5.0\" right=\"5.0\" />\r\n                                       </HBox.margin>\r\n                                    </Label>\r\n                                    <Label fx:id=\"totalPage\" text=\"totPage\">\r\n                                       <font>\r\n                                          <Font size=\"18.0\" />\r\n                                       </font>\r\n                                    </Label>\r\n                                 </children>\r\n                              </HBox>\r\n                              <Button fx:id=\"forwardBt\" disable=\"true\" mnemonicParsing=\"false\">\r\n                                 <graphic>\r\n                                    <ImageView fitHeight=\"58.0\" fitWidth=\"88.0\" pickOnBounds=\"true\" preserveRatio=\"true\" styleClass=\"transparent\">\r\n                                       <image>\r\n                                          <Image url=\"@../img/forward.png\" />\r\n                                       </image>\r\n                                    </ImageView>\r\n                                 </graphic>\r\n                                 <styleClass>\r\n                                    <String fx:value=\"buttonlog\" />\r\n                                    <String fx:value=\"dynamic-button\" />\r\n                                 </styleClass>\r\n                              </Button>\r\n                           </children>\r\n                        </HBox>\r\n                     </children>\r\n                     <opaqueInsets>\r\n                        <Insets left=\"30.0\" right=\"30.0\" />\r\n                     </opaqueInsets>\r\n                     <VBox.margin>\r\n                        <Insets bottom=\"20.0\" left=\"30.0\" right=\"30.0\" top=\"20.0\" />\r\n                     </VBox.margin>\r\n                  </HBox>\r\n                  <HBox alignment=\"CENTER\" prefHeight=\"100.0\" prefWidth=\"785.0\" VBox.vgrow=\"ALWAYS\">\r\n                     <children>\r\n                        <GridPane fx:id=\"cardsGrid\" alignment=\"CENTER\" prefHeight=\"627.0\" prefWidth=\"930.0\">\r\n                          <columnConstraints>\r\n                            <ColumnConstraints hgrow=\"SOMETIMES\" minWidth=\"10.0\" prefWidth=\"100.0\" />\r\n                          </columnConstraints>\r\n                        </GridPane>\r\n                     </children>\r\n                  </HBox>\r\n               </children>\r\n            </VBox>\r\n         </center>\r\n      </BorderPane>\r\n   </children>\r\n</AnchorPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/PaperRaterApp/src/main/resources/it/unipi/dii/lsmd/paperraterapp/layout/browser.fxml b/PaperRaterApp/src/main/resources/it/unipi/dii/lsmd/paperraterapp/layout/browser.fxml
--- a/PaperRaterApp/src/main/resources/it/unipi/dii/lsmd/paperraterapp/layout/browser.fxml	(revision 110d66cb3dda4d59ccc1597de24a36b34d7378ea)
+++ b/PaperRaterApp/src/main/resources/it/unipi/dii/lsmd/paperraterapp/layout/browser.fxml	(date 1640600877886)
@@ -17,7 +17,7 @@
 <?import javafx.scene.layout.VBox?>
 <?import javafx.scene.text.Font?>
 
-<AnchorPane prefHeight="810.0" prefWidth="1315.0" xmlns="http://javafx.com/javafx/17" xmlns:fx="http://javafx.com/fxml/1" fx:controller="it.unipi.dii.lsmd.paperraterapp.controller.BrowserController">
+<AnchorPane prefHeight="700.0" prefWidth="1200.0" xmlns="http://javafx.com/javafx/17" xmlns:fx="http://javafx.com/fxml/1" fx:controller="it.unipi.dii.lsmd.paperraterapp.controller.BrowserController">
    <children>
       <BorderPane prefHeight="200.0" prefWidth="200.0" stylesheets="@../style/main.css" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0">
          <left>
@@ -250,6 +250,9 @@
                           </columnConstraints>
                         </GridPane>
                      </children>
+                     <VBox.margin>
+                        <Insets bottom="20.0" left="15.0" right="15.0" />
+                     </VBox.margin>
                   </HBox>
                </children>
             </VBox>
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"cacf9f0b-5afc-48e0-8d83-75ee5f3d7988\" name=\"Changes\" comment=\"users browse complete 2.0\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/PaperRaterApp/src/main/resources/it/unipi/dii/lsmd/paperraterapp/layout/browser.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/PaperRaterApp/src/main/resources/it/unipi/dii/lsmd/paperraterapp/layout/browser.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/PaperRaterApp/src/main/resources/it/unipi/dii/lsmd/paperraterapp/layout/login.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/PaperRaterApp/src/main/resources/it/unipi/dii/lsmd/paperraterapp/layout/login.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/PaperRaterApp/src/main/resources/it/unipi/dii/lsmd/paperraterapp/layout/register.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/PaperRaterApp/src/main/resources/it/unipi/dii/lsmd/paperraterapp/layout/register.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/PaperRaterApp/src/main/resources/it/unipi/dii/lsmd/paperraterapp/layout/usercard.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/PaperRaterApp/src/main/resources/it/unipi/dii/lsmd/paperraterapp/layout/usercard.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/PaperRaterApp/src/main/resources/it/unipi/dii/lsmd/paperraterapp/style/main.css\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/PaperRaterApp/src/main/resources/it/unipi/dii/lsmd/paperraterapp/style/main.css\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/Main.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/Main.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/controller/BrowserController.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/controller/BrowserController.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/controller/PaperPageController.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/controller/PaperPageController.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/layout/browser.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/layout/browser.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/persistence/MongoDBManager$1.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/persistence/MongoDBManager$1.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/persistence/MongoDBManager$2.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/persistence/MongoDBManager$2.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/persistence/MongoDBManager$3.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/persistence/MongoDBManager$3.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/persistence/MongoDBManager$4.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/persistence/MongoDBManager$4.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/persistence/MongoDBManager$5.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/persistence/MongoDBManager$5.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/persistence/MongoDBManager.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/persistence/MongoDBManager.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/style/main.css\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/style/main.css\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"CodeInsightWorkspaceSettings\">\r\n    <option name=\"optimizeImportsOnTheFly\" value=\"true\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"CSS File\" />\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"FlaskConsoleOptions\" custom-start-script=\"import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\\nApp: %s [%s]\\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))\">\r\n    <envs>\r\n      <env key=\"FLASK_APP\" value=\"app\" />\r\n    </envs>\r\n    <option name=\"myCustomStartScript\" value=\"import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\\nApp: %s [%s]\\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))\" />\r\n    <option name=\"myEnvs\">\r\n      <map>\r\n        <entry key=\"FLASK_APP\" value=\"app\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\r\n  </component>\r\n  <component name=\"GitSEFilterConfiguration\">\r\n    <file-type-list>\r\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\r\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\r\n      <filtered-out-file-type name=\"TAG\" />\r\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\r\n    </file-type-list>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"21pt1bO5oLYuIoKlIPgubWOgyHc\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"ASKED_ADD_EXTERNAL_FILES\" value=\"true\" />\r\n    <property name=\"ASKED_SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"jdk.selected.JAVA_MODULE\" value=\"openjdk-17\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/Server\" />\r\n    <property name=\"list.type.of.created.stylesheet\" value=\"CSS\" />\r\n    <property name=\"node.js.detected.package.eslint\" value=\"true\" />\r\n    <property name=\"node.js.detected.package.tslint\" value=\"true\" />\r\n    <property name=\"node.js.selected.package.eslint\" value=\"(autodetect)\" />\r\n    <property name=\"node.js.selected.package.tslint\" value=\"(autodetect)\" />\r\n    <property name=\"nodejs_package_manager_path\" value=\"npm\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Project\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.15\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.2\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\APPUNTI\\Large-Scale\\progetto\\PaperRater\\PaperRaterApp\\src\\main\\resources\\it\\unipi\\pr\\paperraterapp\\layouts\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.Main\">\r\n    <configuration name=\"GUIApp\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"it.unipi.pr.paperraterapp.GUIApp\" />\r\n      <module name=\"PaperRaterApp\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"it.unipi.pr.paperraterapp.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"ALTERNATIVE_JRE_PATH\" value=\"17\" />\r\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"true\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"it.unipi.dii.lsmd.paperraterapp.Main\" />\r\n      <module name=\"PaperRaterApp\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"it.unipi.dii.paperrater.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"MongoDriver\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"it.unipi.dii.lsmd.paperraterapp.persistence.MongoDriver\" />\r\n      <module name=\"PaperRaterApp\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"it.unipi.dii.lsmd.paperraterapp.persistence.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Neo4jManagerT\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"it.unipi.dii.lsmd.paperraterapp.persistence.Neo4jManagerT\" />\r\n      <module name=\"PaperRaterApp\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"it.unipi.dii.lsmd.paperraterapp.persistence.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"server\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"PaperRaterApp\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"C:\\Users\\Tommaso\\anaconda3\\envs\\pythonProject\\python.exe\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/Server\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/Server/server.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Application.GUIApp\" />\r\n      <item itemvalue=\"Application.Main\" />\r\n      <item itemvalue=\"Application.MongoDriver\" />\r\n      <item itemvalue=\"Application.Neo4jManagerT\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"cacf9f0b-5afc-48e0-8d83-75ee5f3d7988\" name=\"Changes\" comment=\"\" />\r\n      <created>1638649647043</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1638649647043</updated>\r\n      <workItem from=\"1638649648776\" duration=\"1028000\" />\r\n      <workItem from=\"1638728961880\" duration=\"717000\" />\r\n      <workItem from=\"1638777721882\" duration=\"1185000\" />\r\n      <workItem from=\"1638791357928\" duration=\"651000\" />\r\n      <workItem from=\"1638799462618\" duration=\"642000\" />\r\n      <workItem from=\"1638812542457\" duration=\"4781000\" />\r\n      <workItem from=\"1638819062252\" duration=\"6303000\" />\r\n      <workItem from=\"1638876231867\" duration=\"3785000\" />\r\n      <workItem from=\"1638885428662\" duration=\"3423000\" />\r\n      <workItem from=\"1638973259955\" duration=\"1960000\" />\r\n      <workItem from=\"1638975347186\" duration=\"129000\" />\r\n      <workItem from=\"1639055002386\" duration=\"351000\" />\r\n      <workItem from=\"1639213375449\" duration=\"17000\" />\r\n      <workItem from=\"1639322407762\" duration=\"7371000\" />\r\n      <workItem from=\"1639466031517\" duration=\"10985000\" />\r\n      <workItem from=\"1639491067331\" duration=\"5410000\" />\r\n      <workItem from=\"1639504618303\" duration=\"1175000\" />\r\n      <workItem from=\"1639552384638\" duration=\"23168000\" />\r\n      <workItem from=\"1639579957802\" duration=\"591000\" />\r\n      <workItem from=\"1639580556663\" duration=\"193000\" />\r\n      <workItem from=\"1639580754545\" duration=\"99000\" />\r\n      <workItem from=\"1639580862005\" duration=\"614000\" />\r\n      <workItem from=\"1639581484233\" duration=\"469000\" />\r\n      <workItem from=\"1639581958794\" duration=\"75000\" />\r\n      <workItem from=\"1639582293855\" duration=\"1763000\" />\r\n      <workItem from=\"1640003383808\" duration=\"177000\" />\r\n      <workItem from=\"1640107469253\" duration=\"5143000\" />\r\n      <workItem from=\"1640161040917\" duration=\"13585000\" />\r\n      <workItem from=\"1640196076990\" duration=\"4071000\" />\r\n      <workItem from=\"1640253097739\" duration=\"1653000\" />\r\n      <workItem from=\"1640258268195\" duration=\"665000\" />\r\n      <workItem from=\"1640258970646\" duration=\"602000\" />\r\n      <workItem from=\"1640334449657\" duration=\"14195000\" />\r\n      <workItem from=\"1640471068033\" duration=\"8495000\" />\r\n      <workItem from=\"1640511428116\" duration=\"19233000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"create the folder to start the app dev\">\r\n      <created>1638650378848</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1638650378849</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"create the folder to start the app dev\">\r\n      <created>1638650462787</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1638650462787</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"create the GUI for the login and prepared the contoller\">\r\n      <created>1638817572447</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1638817572447</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"create the GUI for the login and prepared the contoller\">\r\n      <created>1638817808775</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1638817808776</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"create the GUI for the login and prepared the contoller\">\r\n      <created>1638818513626</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1638818513626</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"create the GUI for the login and prepared the contoller\">\r\n      <created>1638819254692</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1638819254692</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Create the register form and the controller to switch from login page to register page and the other way.\">\r\n      <created>1638879065424</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1638879065424</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Create the register form and the controller to switch from login page to register page and the other way.\">\r\n      <created>1638879135474</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1638879135474</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"add the logo at the app\">\r\n      <created>1638879593572</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1638879593572</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"add javadoc and handle IOException\">\r\n      <created>1638886602471</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1638886602471</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Added Project structure\">\r\n      <created>1638973316639</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1638973316639</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Renamed Main\">\r\n      <created>1638973624101</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1638973624101</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"PUSH DEFINITIVA\">\r\n      <created>1638973811498</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1638973811498</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"PUSH DEFINITIVA\">\r\n      <created>1638973893359</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1638973893359</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"adjust path\">\r\n      <created>1638976905217</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1638976905217</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"Resolve path\">\r\n      <created>1638977507204</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1638977507205</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"Resolve path 2.0\">\r\n      <created>1638977864284</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1638977864284</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"Create driver for MongoDB\">\r\n      <created>1639327313886</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1639327313886</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"create user entity\">\r\n      <created>1639331576362</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1639331576362</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"start working on my query\">\r\n      <created>1639473181775</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1639473181775</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"work in progress tom\">\r\n      <created>1639505772058</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1639505772058</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"complete the mongoDB query -Tom\">\r\n      <created>1639577395471</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1639577395471</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"complete the mongoDB query -Tom\">\r\n      <created>1639577427117</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1639577427117</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"complete the mongoDB query (some fix) -Tom\">\r\n      <created>1639578170477</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1639578170477</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"complete the mongoDB query (some fix) -Tom\">\r\n      <created>1640003403864</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1640003403864</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"commit\">\r\n      <created>1640169279931</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1640169279931</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"neo4j query\">\r\n      <created>1640199549839</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1640199549839</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"work no:&#10;- graphic design&#10;- browser navigation&#10;- backends useful query\">\r\n      <created>1640478242684</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1640478242684</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"working on the browser\">\r\n      <created>1640515010800</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1640515010800</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00030\" summary=\"users browse complete\">\r\n      <created>1640538971626</created>\r\n      <option name=\"number\" value=\"00030\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1640538971626</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00031\" summary=\"users browse complete\">\r\n      <created>1640539004260</created>\r\n      <option name=\"number\" value=\"00031\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1640539004260</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00032\" summary=\"users browse complete 2.0\">\r\n      <created>1640539178667</created>\r\n      <option name=\"number\" value=\"00032\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1640539178667</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"33\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"create the folder to start the app dev\" />\r\n    <MESSAGE value=\"create the GUI for the login and prepared the contoller\" />\r\n    <MESSAGE value=\"Create the register form and the controller to switch from login page to register page and the other way.\" />\r\n    <MESSAGE value=\"add the logo at the app\" />\r\n    <MESSAGE value=\"add javadoc and handle IOException\" />\r\n    <MESSAGE value=\"Added Project structure\" />\r\n    <MESSAGE value=\"Renamed Main\" />\r\n    <MESSAGE value=\"PUSH DEFINITIVA\" />\r\n    <MESSAGE value=\"adjust path\" />\r\n    <MESSAGE value=\"Resolve path\" />\r\n    <MESSAGE value=\"Resolve path 2.0\" />\r\n    <MESSAGE value=\"Create driver for MongoDB\" />\r\n    <MESSAGE value=\"create user entity\" />\r\n    <MESSAGE value=\"start working on my query\" />\r\n    <MESSAGE value=\"work in progress tom\" />\r\n    <MESSAGE value=\"complete the mongoDB query -Tom\" />\r\n    <MESSAGE value=\"complete the mongoDB query (some fix) -Tom\" />\r\n    <MESSAGE value=\"commit\" />\r\n    <MESSAGE value=\"neo4j query\" />\r\n    <MESSAGE value=\"work no:&#10;- graphic design&#10;- browser navigation&#10;- backends useful query\" />\r\n    <MESSAGE value=\"working on the browser\" />\r\n    <MESSAGE value=\"users browse complete\" />\r\n    <MESSAGE value=\"users browse complete 2.0\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"users browse complete 2.0\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 110d66cb3dda4d59ccc1597de24a36b34d7378ea)
+++ b/.idea/workspace.xml	(date 1640602108332)
@@ -4,24 +4,18 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="cacf9f0b-5afc-48e0-8d83-75ee5f3d7988" name="Changes" comment="users browse complete 2.0">
+    <list default="true" id="cacf9f0b-5afc-48e0-8d83-75ee5f3d7988" name="Changes" comment="working on papers browse">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/PaperRaterApp/src/main/java/it/unipi/dii/lsmd/paperraterapp/controller/LoginController.java" beforeDir="false" afterPath="$PROJECT_DIR$/PaperRaterApp/src/main/java/it/unipi/dii/lsmd/paperraterapp/controller/LoginController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/PaperRaterApp/src/main/java/it/unipi/dii/lsmd/paperraterapp/persistence/MongoDBManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/PaperRaterApp/src/main/java/it/unipi/dii/lsmd/paperraterapp/persistence/MongoDBManager.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/PaperRaterApp/src/main/resources/it/unipi/dii/lsmd/paperraterapp/layout/browser.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/PaperRaterApp/src/main/resources/it/unipi/dii/lsmd/paperraterapp/layout/browser.fxml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/PaperRaterApp/src/main/resources/it/unipi/dii/lsmd/paperraterapp/layout/login.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/PaperRaterApp/src/main/resources/it/unipi/dii/lsmd/paperraterapp/layout/login.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/PaperRaterApp/src/main/resources/it/unipi/dii/lsmd/paperraterapp/layout/register.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/PaperRaterApp/src/main/resources/it/unipi/dii/lsmd/paperraterapp/layout/register.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/PaperRaterApp/src/main/resources/it/unipi/dii/lsmd/paperraterapp/layout/usercard.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/PaperRaterApp/src/main/resources/it/unipi/dii/lsmd/paperraterapp/layout/usercard.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/PaperRaterApp/src/main/resources/it/unipi/dii/lsmd/paperraterapp/style/main.css" beforeDir="false" afterPath="$PROJECT_DIR$/PaperRaterApp/src/main/resources/it/unipi/dii/lsmd/paperraterapp/style/main.css" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/Main.class" beforeDir="false" afterPath="$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/Main.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/controller/BrowserController.class" beforeDir="false" afterPath="$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/controller/BrowserController.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/controller/PaperPageController.class" beforeDir="false" afterPath="$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/controller/PaperPageController.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/layout/browser.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/layout/browser.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/persistence/MongoDBManager$1.class" beforeDir="false" afterPath="$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/persistence/MongoDBManager$1.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/persistence/MongoDBManager$2.class" beforeDir="false" afterPath="$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/persistence/MongoDBManager$2.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/persistence/MongoDBManager$3.class" beforeDir="false" afterPath="$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/persistence/MongoDBManager$3.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/persistence/MongoDBManager$4.class" beforeDir="false" afterPath="$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/persistence/MongoDBManager$4.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/controller/ProfilePageController.class" beforeDir="false" afterPath="$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/controller/ProfilePageController.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/persistence/MongoDBManager$5.class" beforeDir="false" afterPath="$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/persistence/MongoDBManager$5.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/persistence/MongoDBManager.class" beforeDir="false" afterPath="$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/persistence/MongoDBManager.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/style/main.css" beforeDir="false" afterPath="$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/style/main.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/utils/Utils.class" beforeDir="false" afterPath="$PROJECT_DIR$/PaperRaterApp/target/classes/it/unipi/dii/lsmd/paperraterapp/utils/Utils.class" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -233,7 +227,8 @@
       <workItem from="1640258970646" duration="602000" />
       <workItem from="1640334449657" duration="14195000" />
       <workItem from="1640471068033" duration="8495000" />
-      <workItem from="1640511428116" duration="19233000" />
+      <workItem from="1640511428116" duration="30608000" />
+      <workItem from="1640598630465" duration="3200000" />
     </task>
     <task id="LOCAL-00001" summary="create the folder to start the app dev">
       <created>1638650378848</created>
@@ -459,7 +454,21 @@
       <option name="project" value="LOCAL" />
       <updated>1640539178667</updated>
     </task>
-    <option name="localTasksCounter" value="33" />
+    <task id="LOCAL-00033" summary="users browse complete 2.0">
+      <created>1640539657681</created>
+      <option name="number" value="00033" />
+      <option name="presentableId" value="LOCAL-00033" />
+      <option name="project" value="LOCAL" />
+      <updated>1640539657681</updated>
+    </task>
+    <task id="LOCAL-00034" summary="working on papers browse">
+      <created>1640560364766</created>
+      <option name="number" value="00034" />
+      <option name="presentableId" value="LOCAL-00034" />
+      <option name="project" value="LOCAL" />
+      <updated>1640560364766</updated>
+    </task>
+    <option name="localTasksCounter" value="35" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -502,7 +511,8 @@
     <MESSAGE value="working on the browser" />
     <MESSAGE value="users browse complete" />
     <MESSAGE value="users browse complete 2.0" />
-    <option name="LAST_COMMIT_MESSAGE" value="users browse complete 2.0" />
+    <MESSAGE value="working on papers browse" />
+    <option name="LAST_COMMIT_MESSAGE" value="working on papers browse" />
   </component>
   <component name="XSLT-Support.FileAssociations.UIState">
     <expand />
